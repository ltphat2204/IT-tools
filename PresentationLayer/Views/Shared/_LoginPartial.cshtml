@using Microsoft.AspNetCore.Identity
@using BusinessLayer.Entities
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    var user = await UserManager.GetUserAsync(User);
    var displayName = user?.Name ?? User.Identity?.Name;
    var profilePhoto = user?.Photo;
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle d-flex align-items-center" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                <img src="@profilePhoto" alt="@displayName" class="rounded-circle" style="width: 30px; height: 30px; object-fit: cover; margin-right: 5px;" />
                <span>Xin chào, @displayName</span>
            </a>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                <li class="nav-item">
                    <a class="dropdown-item" asp-controller="User" asp-action="Profile">Profile</a>
                </li>
                <li class="nav-item">
                    <form class="form-inline" asp-controller="Auth" asp-action="Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                        <button type="submit" class="dropdown-item btn btn-link text-dark" style="border-radius:0;">Logout</button>
                    </form>
                </li>
            </ul>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link btn btn-outline-primary ms-2 me-3 text-dark" asp-controller="Auth" asp-action="Login">Login</a>
        </li>
        <li class="nav-item">
            <a class="nav-link btn btn-primary text-light" asp-controller="Auth" asp-action="Register">Get started for free</a>
        </li>
    }
</ul>
